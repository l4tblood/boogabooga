local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")


local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/l4tblood/boogabooga/main/lib.lua"))()
local Window = Library:CreateWindow("SKM#?QhS?:?_k??5nlzk8a31*@nj", Vector2.new(492, 598), Enum.KeyCode.RightControl)
local AimbotTab = Window:CreateTab("Main")

local ReachSettings = {
    ReachEnabled = false,
    ReachDistance = 15,
}

local function SpawnTP()
    local sui = game.Workspace.Spawn.SurfaceLight
    game.Players.LocalPlayer.Character:MoveTo(sui.Position)
end

local function Map2TP()
    local sui = game.Workspace.Spawn2.SurfaceLight
    game.Players.LocalPlayer.Character:MoveTo(sui.Position)
end

local function Map3TP()
    local sui = game.Workspace.Spawn3.SurfaceLight
    game.Players.LocalPlayer.Character:MoveTo(sui.Position)
end

local function Map4TP()
    local sui = game.Workspace.Spawn4.SurfaceLight
    game.Players.LocalPlayer.Character:MoveTo(sui.Position)
end

local function Map5TP()
    local sui = game.Workspace.Spawn5.SurfaceLight
    game.Players.LocalPlayer.Character:MoveTo(sui.Position)
end

local ReachSection = AimbotTab:CreateSector("Reach Settings", "left")

ReachSection:AddToggle("Enable Reach", ReachSettings.ReachEnabled, function(enabled)
    ReachSettings.ReachEnabled = enabled
end)

ReachSection:AddSlider("Stud", 0, 30, ReachSettings.ReachDistance, 0.1, function(distance)
    ReachSettings.ReachDistance = distance
end)

RunService.Stepped:Connect(function()
    if ReachSettings.ReachEnabled then
        local success, error = pcall(function()
            local Handle = Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Handle
            for _, Player in pairs(Players:GetPlayers()) do
                local Character = Player.Character
                if Character and Character ~= Players.LocalPlayer.Character and Character.Humanoid.Health ~= 0 and (Character.HumanoidRootPart.Position - Handle.Position).Magnitude <= ReachSettings.ReachDistance then
                    Character["Left Arm"]:BreakJoints()
                    Character["Left Leg"]:BreakJoints()
                    Character["Right Leg"]:BreakJoints()
                    Character["Left Arm"].CFrame = Handle.CFrame
                    Character["Left Leg"].CFrame = Handle.CFrame
                    Character["Right Leg"].CFrame = Handle.CFrame
                    Character["Left Arm"].Transparency = 1
                    Character["Left Leg"].Transparency = 1
                    Character["Right Leg"].Transparency = 1
                end
            end
        end)
    end
end)

local MiscSection = AimbotTab:CreateSector("Misc", "left")

local walkSpeed = 16
local customSpeed = walkSpeed
local speedToggle = false

MiscSection:AddToggle("Speed", false, function(toggleOn)
    speedToggle = toggleOn
    if speedToggle then
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = customSpeed
    else
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = walkSpeed
    end
end)

MiscSection:AddSlider("Speed Value", 0, 48, 48, 1, function(sliderValue)
    customSpeed = sliderValue
    if speedToggle then
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = customSpeed
    end
end)

MiscSection:AddButton("Click TP Tool", function()
    local tool = Instance.new("Tool")
    tool.RequiresHandle = false
    tool.Name = "Click TP"
    tool.Parent = game.Players.LocalPlayer.Backpack
    
    local mouse = game.Players.LocalPlayer:GetMouse()
    
    local function teleport()
        local pos = mouse.Hit + Vector3.new(0,2.5,0)
        if valid(pos) then
            pos = CFrame.new(pos.X,pos.Y,pos.Z)
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos
        end
    end
    
    function valid(pos)
        return pos.Y >= 0 and pos.Y <= 50
    end
    
    local connection
    
    tool.Equipped:Connect(function()
        connection = mouse.Button1Down:Connect(teleport)
    end)
    
    tool.Unequipped:Connect(function()
        if connection then
            connection:Disconnect()
            connection = nil
        end
    end)
end)

local MapsSection = AimbotTab:CreateSector("Maps", "left")

MapsSection:AddButton("Teleport to Spawn", function()
    SpawnTP()
end)

MapsSection:AddButton("Teleport to 500k world", function()
    Map2TP()
end)

MapsSection:AddButton("Teleport to 5m world", function()
    Map3TP()
end)

MapsSection:AddButton("Teleport to 50m world", function()
    Map4TP()
end)

MapsSection:AddButton("Teleport to 500m world", function()
    Map5TP()
end)

local ExtraSection = AimbotTab:CreateSector("Extra+", "right")

ExtraSection:AddToggle("Blatant Mode", false, function(toggleState)
    local Players = game:GetService("Players")
    local UserInputService = game:GetService("UserInputService")
    local RunService = game:GetService("RunService")

    local a = Players.LocalPlayer
    local b = {AutoAim=false, Mode=1}

    if toggleState then -- Only execute if the toggle is on
        -- Create a new ScreenGui
        local MainGui = Instance.new("ScreenGui")
        MainGui.Name = "MainGui"
        MainGui.Parent = a:WaitForChild("PlayerGui")

        local d = Instance.new("Frame", MainGui)
        d.Name = "AutoAimFrame"
        d.BackgroundTransparency = 1
        d.Position = UDim2.new(0.007, 0, 0.938, 0)
        d.Size = UDim2.new(0, 289, 0, 42)

        local e = Instance.new("TextLabel", d)
        e.Name = "AutoAimLabel"
        e.BackgroundTransparency = 1
        e.Position = UDim2.new(0.042, 0, 0, 0)
        e.Size = UDim2.new(0, 296, 0, 33)
        e.Font = Enum.Font.SourceSansBold
        e.Text = "Mode: Teleport"
        e.TextColor3 = Color3.new(1, 0, 0)
        e.TextScaled = true
        e.TextSize = 14
        e.TextWrapped = true
        e.TextXAlignment = Enum.TextXAlignment.Left

        UserInputService.InputBegan:Connect(function(g)
            if not UserInputService:GetFocusedTextBox() then 
                b.AutoAim = not b.AutoAim 
            end 
        end)

        local function h(i)
            local j={unpack(Players:GetPlayers())}
            local k,l=nil,15
            for m,n in pairs(j) do 
                if n and n~=a then 
                    local o=n.Character:FindFirstChild("HumanoidRootPart")
                    local p=n.Character:FindFirstChild("Humanoid")
                    if o and p and p.Health>0 then 
                        local q = o.Position - Vector3.new(i.magnitude, i.magnitude, i.magnitude)
                        if q<l then 
                            k,l=o,q 
                        end 
                    end 
                end 
            end
            return k 
        end

        local function r()
            if b.AutoAim then 
                local s=a.Character:FindFirstChild("HumanoidRootPart")
                local t=h(s.Position)
                if t then 
                    if b.Mode==1 then 
                        a.Character:SetPrimaryPartCFrame(CFrame.new(Vector3.new(t.Position.X,s.Position.Y,t.Position.Z)))
                    else 
                        local u=t.Position-s.Position.unit
                        s.CFrame=CFrame.new(s.Position,s.Position+u)
                    end 
                end 
            end 
        end

        RunService.RenderStepped:Connect(r)

        local function v()
            if d then 
                d:Destroy()
            end
            if script then 
                script:Destroy()
            end 
        end

        local function w(x,y)
            if x==a then 
                local z=y:lower()
                if z=="/mode 1"or z=="/mode tp"then 
                    b.Mode=1
                    e.Text="Mode: Teleport"
                elseif z=="/mode 2"or z=="/mode looking"then 
                    b.Mode=2
                    e.Text="Mode: Looking"
                elseif z=="/destroy"then 
                    v()
                end 
            end 
        end

        a.Chatted:Connect(w)
    end
end)



local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local HighlightColor = Color3.fromRGB(255, 0, 0)

local highlightedCharacter = nil
local highlightObject = nil
local labelObject = nil
local targetPlayer = nil
local snipeEnabled = false

local function createHighlight(character)
    local highlight = Instance.new("SelectionBox")
    highlight.Name = "Highlight"
    highlight.Adornee = character.PrimaryPart
    highlight.Color3 = HighlightColor
    highlight.LineThickness = 0.05
    highlight.Transparency = 0.5
    highlight.Parent = character.PrimaryPart
    return highlight
end

local function createLabel(character)
    local billboardGui = Instance.new("BillboardGui")
    local textLabel = Instance.new("TextLabel")

    billboardGui.Adornee = character.PrimaryPart
    billboardGui.Size = UDim2.new(0, 100, 0, 50)
    billboardGui.StudsOffset = Vector3.new(0, 5, 0)
    billboardGui.Parent = character.PrimaryPart

    textLabel.BackgroundTransparency = 1
    textLabel.Size = UDim2.new(0, 100, 0, 50)
    textLabel.Font = Enum.Font.SourceSansBold
    textLabel.Text = "Snipe"
    textLabel.TextColor3 = Color3.new(1, 0, 0)
    textLabel.TextScaled = true
    textLabel.Parent = billboardGui

    return billboardGui
end

local function toggleSnipeScript(toggleValue)
    snipeEnabled = toggleValue

    if not snipeEnabled then
        if highlightObject then
            highlightObject:Destroy()
            highlightObject = nil
            highlightedCharacter = nil
        end

        if labelObject then
            labelObject:Destroy()
            labelObject = nil
        end
    end
end

ExtraSection:AddToggle("Snipe Script", false, toggleSnipeScript)

RunService.RenderStepped:Connect(function()
    if not snipeEnabled then return end

    local Target = Mouse.Target
    if Target then
        local player = Players:GetPlayerFromCharacter(Target.Parent)
        if player and player ~= LocalPlayer then
            if highlightedCharacter ~= player.Character then
                if highlightObject then
                    highlightObject:Destroy()
                end
                if labelObject then
                    labelObject:Destroy()
                end
                highlightedCharacter = player.Character
                highlightObject = createHighlight(highlightedCharacter)
                labelObject = createLabel(highlightedCharacter)
            end
        else
            if highlightObject then
                highlightObject:Destroy()
                highlightObject = nil
                highlightedCharacter = nil
            end
            if labelObject then
                labelObject:Destroy()
                labelObject = nil
            end
        end
    end
end)

UserInputService.InputBegan:Connect(function(input)
    if not snipeEnabled or input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end

    local target = Mouse.Target
    if target then
        targetPlayer = Players:GetPlayerFromCharacter(target.Parent)
        if targetPlayer and targetPlayer ~= LocalPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
            LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame = targetPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
        end
    end
end)

RunService.RenderStepped:Connect(function()
    if not snipeEnabled or not targetPlayer or not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("HumanoidRootPart") or targetPlayer.Character:FindFirstChild("Humanoid").Health <= 0 then
        targetPlayer = nil
        return
    end

    LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame = targetPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame - Vector3.new(0, 5, 0)
end)
